# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/migrate/from-travis?view=azure-devops

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - 7.*

jobs:
- job: build
  strategy:
    maxParallel: 1
    matrix:
      PHP_73_FPM:
        PHP_VERSION: 7_3_X
        FOLDER: 7.3
        PHP_TAG_VERSION: 7.3.8
        FPM: 1
      PHP_73_COMPOSER:
        PHP_VERSION: 7_3_X
        FOLDER: 7.3
        PHP_TAG_VERSION: 7.3.8
        COMPOSER: 1
      PHP_73_SWOOLE:
        PHP_VERSION: 7_3_X
        FOLDER: 7.3
        PHP_TAG_VERSION: 7.3.8
        SWOOLE: 1
      PHP_73_UNIT:
        PHP_VERSION: 7_3_X
        FOLDER: 7.3
        PHP_TAG_VERSION: 7.3.8
        UNIT: 1
      PHP_73_SUPERVISORD:
        PHP_VERSION: 7_3_X
        FOLDER: 7.3
        PHP_TAG_VERSION: 7.3.8
        SUPERVISORD: 1
      # PHP_56_FPM:
      #   PHP_VERSION: 5_6_X
      #   FOLDER: 5.6
      #   PHP_TAG_VERSION: 5.6.40
      #   FPM: 1
      # PHP_70_FPM:
      #   PHP_VERSION: 7_0_X
      #   FOLDER: 7.0
      #   PHP_TAG_VERSION: 7.0.33
      #   FPM: 1
      PHP_71_FPM:
        PHP_VERSION: 7_1_X
        FOLDER: 7.1
        PHP_TAG_VERSION: 7.1.31
        FPM: 1
      PHP_72_FPM:
        PHP_VERSION: 7_2_X
        FOLDER: 7.2
        PHP_TAG_VERSION: 7.2.21
        FPM: 1
      PHP_72_COMPOSER:
        PHP_VERSION: 7_2_X
        FOLDER: 7.2
        PHP_TAG_VERSION: 7.2.21
        COMPOSER: 1
      PHP_72_SWOOLE:
        PHP_VERSION: 7_2_X
        FOLDER: 7.2
        PHP_TAG_VERSION: 7.2.21
        SWOOLE: 1
      PHP_72_UNIT:
        PHP_VERSION: 7_2_X
        FOLDER: 7.2
        PHP_TAG_VERSION: 7.2.21
        UNIT: 1
      PHP_72_SUPERVISORD:
        PHP_VERSION: 7_2_X
        FOLDER: 7.2
        PHP_TAG_VERSION: 7.2.21
        SUPERVISORD: 1
      PHP_74_FPM:
        PHP_VERSION: 7_4_X
        FOLDER: 7.4
        PHP_TAG_VERSION: 7.4.0beta
        FPM: 1
      PHP_74_COMPOSER:
        PHP_VERSION: 7_4_X
        FOLDER: 7.4
        PHP_TAG_VERSION: 7.4.0beta
        COMPOSER: 1
      PHP_74_SWOOLE:
        PHP_VERSION: 7_4_X
        FOLDER: 7.4
        PHP_TAG_VERSION: 7.4.0beta
        SWOOLE: 1
      PHP_nightly_FPM:
        PHP_VERSION: nightly
        FOLDER: nightly
        PHP_TAG_VERSION: nightly
        FPM: 1
      PHP_nightly_COMPOSER:
        PHP_VERSION: nightly
        FOLDER: nightly
        PHP_TAG_VERSION: nightly
        COMPOSER: 1
      PHP_nightly_SWOOLE:
        PHP_VERSION: nightly
        FOLDER: nightly
        PHP_TAG_VERSION: nightly
        SWOOLE: 1

  pool:
    vmImage: 'ubuntu-latest'

  variables:
  - group: docker
  - name: DOCKER_CLI_EXPERIMENTAL
    value: enabled
  - name: DOCKER_COMPOSE_VERSION
    value: 1.24.0
  timeoutInMinutes: 0
  steps:
  - script: |
      set -x
      export DOCKER_CHANNEL=test
      docker --version
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) ${DOCKER_CHANNEL}"
      sudo apt-get update
      sudo apt-get -y install docker-ce
      docker --version
      docker-compose --version
      sudo rm /usr/local/bin/docker-compose
      curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
      chmod +x docker-compose
      sudo mv docker-compose /usr/local/bin
      docker-compose --version
      sudo mkdir -p /etc/systemd/system/docker.service.d
      echo -e '[Service]\nExecStart=\nExecStart=/usr/bin/dockerd' | sudo tee /etc/systemd/system/docker.service.d/docker.conf
      echo '{"hosts":["unix:///var/run/docker.sock","tcp://0.0.0.0:2375"],"experimental":true}' | sudo tee /etc/docker/daemon.json
      sudo systemctl daemon-reload
      sudo systemctl cat docker
      sudo systemctl restart docker
      sleep 5
      docker run --rm --privileged docker/binfmt:820fdd95a9972a5308930a2bdfb8573dd4447ad3
      cat /proc/sys/fs/binfmt_misc/qemu-aarch64
      docker buildx create --name mybuilder
      docker buildx use mybuilder
      docker buildx inspect --bootstrap
    displayName: 'Setup Docker'

  - script: |
      set -x
      echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USERNAME) --password-stdin
    displayName: 'Docker Login'

  - script: |
      cp .env.example .env
      source tag.sh
      set -x

      if [ ! `echo $BUILD_SOURCEBRANCH | grep 'refs/tags/'` ];then \
        export PLATFORM=linux/amd64; \
        if [ "$PHP_VERSION" = 7_4_X -o "$PHP_VERSION" = nightly ];then \
          export PLATFORM=linux/amd64,linux/arm64,linux/arm/v7; \
          IS_PUSH=--push; \
        else \
          true; \
        fi; \
      else \
        IS_PUSH=--push; \
      fi

      if [ -n "$UNIT" ];then docker buildx build --build-arg ALPINE_URL=${ALPINE_URL:-dl-cdn.alpinelinux.org} --target=php -t $DOCKER_HUB_USERNAME/php:${PHP_TAG_VERSION}-unit-alpine ${IS_PUSH} ${FOLDER}/unit; fi
      if [ -n "$SUPERVISORD" ];then docker buildx build --build-arg ALPINE_URL=${ALPINE_URL:-dl-cdn.alpinelinux.org} -t $DOCKER_HUB_USERNAME/php:${PHP_TAG_VERSION}-supervisord-alpine ${IS_PUSH} ${FOLDER}/supervisord; fi
      if [ -n "$COMPOSER" ];then docker buildx build --build-arg ALPINE_URL=${ALPINE_URL:-dl-cdn.alpinelinux.org} -t $DOCKER_HUB_USERNAME/php:${PHP_TAG_VERSION}-composer-alpine --platform ${PLATFORM} ${IS_PUSH} ${FOLDER}/composer; fi
      if [ -n "$SINGLE" ];then docker buildx build --build-arg ALPINE_URL=${ALPINE_URL:-dl-cdn.alpinelinux.org} -t $DOCKER_HUB_USERNAME/php:${PHP_TAG_VERSION}-single-alpine ${IS_PUSH} ${FOLDER}/single; fi
      if [ -n "$SWOOLE" ];then docker buildx build --build-arg ALPINE_URL=${ALPINE_URL:-dl-cdn.alpinelinux.org} -t $DOCKER_HUB_USERNAME/php:${PHP_TAG_VERSION}-swoole-alpine ${IS_PUSH} ${FOLDER}/swoole; fi
      if [ -n "$FPM" ];then docker buildx build --build-arg ALPINE_URL=${ALPINE_URL:-dl-cdn.alpinelinux.org} --target=php -t $DOCKER_HUB_USERNAME/php:${PHP_TAG_VERSION}-fpm-alpine ${fpmTagOptions} --platform ${PLATFORM} ${IS_PUSH} ${FOLDER}/alpine; fi
    env:
      DOCKER_HUB_USERNAME: khs1994
      PLATFORM: linux/amd64,linux/arm64,linux/arm/v7
    displayName: 'Build Image'
    timeoutInMinutes: 0

  - script: |
      curl -X POST https://hooks.microbadger.com/images/$DOCKER_HUB_USERNAME/php/OMVCEKSr9I0cjhU0DQop3HwjYAc=
    env:
      DOCKER_HUB_USERNAME: khs1994
    displayName: 'Push alias'
    condition: succeeded()
