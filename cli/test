#!/bin/bash

if [ -f "khs1994-robot.enc" ];then echo -e "\n\033[32mINFO\033[0m Can't EXEC in cli folder"; exit 1; fi

# 删除原项目

print_info(){
  echo -e "\033[32mINFO\033[0m  $1\n"
}

delete(){
  docker-compose down -v
  print_info "删除原有项目成功"
}

docker_run(){
  docker ps -a

  sleep 5

  curl 127.0.0.1

  docker ps -a \
    && docker-compose down \
    && print_info $1
}

# 测试开发环境

_command(){

  export PATH=$PWD/bin:$PATH

  cd app/demo

  lnmp-php

  lnmp-composer install

  lnmp-phpunit tests/DemoTest.php

  print_info "测试 PHPer command 完毕"
}

development(){
  print_info "开发测试开始"

  ./lnmp-docker.sh development

  docker_run "开发境测试完毕"

  _command
}

# k8s

k8s(){
  curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.0/bin/linux/amd64/kubectl && \
  chmod +x kubectl && sudo mv kubectl /usr/local/bin/

  curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && \
  chmod +x minikube && sudo mv minikube /usr/local/bin/

  sudo minikube start --vm-driver=none --kubernetes-version=v1.8.0

  minikube update-context
  JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; \
    until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

  kubectl cluster-info

  cd kubernetes
  ./kubernetes.sh deploy
  kubectl get deployment
  kubectl get services
  ./kubernetes.sh cleanup
}

# Swarm mode

swarm(){
  sed -i "s!file: /root/.ssh/id_rsa!file: ./secrets/ssh_config!g" docker-production.yml
  docker node ls > /dev/null 2>&1
  if [ $? != 0 ];then docker swarm init; fi
  docker stack rm lnmp
  docker stack deploy -c docker-production.yml lnmp
  until curl 127.0.0.1; do
    docker stack ps lnmp
    docker ps -a
    echo "Wait nginx service start"
    sleep 5
  done
  sleep 120
  docker ps -a
  docker stack ls
  docker stack ps lnmp
  docker stack services lnmp
  docker stack rm lnmp
}

if [ ! -z "$1" ];then $1; else development; swarm; k8s; fi
