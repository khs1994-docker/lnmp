#!/bin/bash

if [ -f "khs1994-robot.enc" ];then echo -e "\033[32mINFO\033[0m  不允许在 bin 目录中执行"; exit 1; fi

. .env ; LARAVEL_PATH=$1; cmd="$2" ; ARCH=`uname -m` ; OS=`uname -s`

# 判断架构

TAG=${KHS1994_LNMP_PHP_VERSION}-alpine3.7

if [ ${ARCH} = 'armv7l' ] || [ ${ARCH} = 'aarch64' ];then
  DOCKER_IMAGE=khs1994/arm64v8-php-fpm
  if [ ${ARCH} = 'armv7l' ];then
    DOCKER_IMAGE=khs1994/arm32v7-php-fpm
    TAG=${KHS1994_LNMP_PHP_VERSION}-stretch
  fi
elif [ ${ARCH} = 'x86_64' ];then
  docker image ls | grep ccr.ccs.tencentyun.com/khs1994/php-fpm > /dev/null 2>&1
  if [ "$?" = 0 ];then DOCKER_IMAGE=ccr.ccs.tencentyun.com/khs1994/php-fpm; else DOCKER_IMAGE=khs1994/php-fpm; fi
else
  echo -e "\n\033[32mINFO\033[0m  ${ARCH} 暂不支持"
  exit 1
fi

# if build image
# DOCKER_IMAGE=lnmp-php

echo -e  "\033[32mINFO\033[0m  在 ${DOCKER_IMAGE}:${TAG} 内 /app/ 执行 $ laravel new ${LARAVEL_PATH} ${cmd}" && echo -e  "\n\033[32mINFO\033[0m  以下为输出内容\n\n"

docker run -it --rm \
  -v $PWD/app:/app \
  -v $PWD/tmp/cache:/tmp/cache \
  ${DOCKER_IMAGE}:${TAG} \
  laravel new ${LARAVEL_PATH} ${cmd}

if [ ${OS} = 'Linux' ] || [ ${OS} = 'Darwin' ];then
  sudo chmod -R 765 app/${LARAVEL_PATH}
  sudo chown -R `id -u`:`id -g` app/${LARAVEL_PATH}
  # 使用 .env.development 或 .env.production 不使用 .env 文件
fi

mv app/${LARAVEL_PATH}/.env app/${LARAVEL_PATH}/.env.backup

cp app/.env* app/${LARAVEL_PATH}

chmod -R 777 app/${LARAVEL_PATH}/storage
