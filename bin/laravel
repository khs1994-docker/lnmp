#!/bin/bash

set -e

error(){
  return 1
}

if [ -f "khs1994-robot.enc" ];then
  echo -e "\n\033[32mINFO\033[0m  不允许在 bin 目录中执行"
  error
fi

. .env
echo -e "$0\n"
LARAVEL_PATH=$1
ARCH=`uname -m`

# 判断架构

if [ ${ARCH} = "armv7l" -o ${ARCH} = "aarch64" ];then
  DOCKER_IMAGE=khs1994/arm64v8-php-fpm
  if [ ${ARCH} = "armv7l" ];then
    DOCKER_IMAGE=khs1994/arm32v7-php-fpm
  fi
  TAG=${KHS1994_LNMP_PHP_VERSION}-jessie
elif [ ${ARCH} = "x86_64" ];then
  DOCKER_IMAGE=khs1994/php-fpm
  TAG=${KHS1994_LNMP_PHP_VERSION}-alpine3.6
else
  echo -e "\n\033[32mINFO\033[0m  ${ARCH} 暂不支持"
  error
fi

# if build image
# DOCKER_IMAGE=lnmp-php

echo -e  "\n\033[32mINFO\033[0m  在 ${DOCKER_IMAGE}:${TAG} 内 /app/ 执行 $ laravel new ${LARAVEL_PATH}" && echo -e  "\n\033[32mINFO\033[0m  以下为输出内容\n\n"

docker run -it --rm \
  -v $PWD/app:/app \
  -v $PWD/tmp/cache:/tmp/cache \
  ${DOCKER_IMAGE}:${TAG} \
  laravel new ${LARAVEL_PATH}

if [ `uname -s` = "Linux" -o `uname -s` = "Darwin" ];then
  sudo chmod -R 777 app/${LARAVEL_PATH}
  sudo chown -R `id -u`:`id -g` app/${LARAVEL_PATH}
  # 使用 .env.development 或 .env.production 不使用 .env 文件
fi

mv app/${LARAVEL_PATH}/.env app/${LARAVEL_PATH}/.env.backup

cp app/.env* app/${LARAVEL_PATH}

chmod -R 777 app/${LARAVEL_PATH}/storage
