version: "3.5"

x-logging:
  &default-logging
  driver: journald

x-common:
  &default-common
  env_file:
    - ./cli/timezone.env
  networks:
    - backend

x-deploy:
  &default-deploy
  restart_policy:
    condition: any
    delay: 5s
    max_attempts: 5
    window: 123s
  update_config:
    parallelism: 2
    delay: 10s
    order: stop-first

x-labels:
  &default-labels
  com.khs1994.lnmp: "true"
  com.khs1994.lnmp.app.env: production_swarm_mode

services:
  #
  # Swarm mode
  #
  # khs1994.com Docker Swarm mode
  #
  #
  # $ docker-compose -f docker-production.yml build
  # $ docker-compose -f docker-production.yml push
  #
  #
  # $ docker stack deploy -c docker-production.yml lnmp
  # $ docker stack ps lnmp
  #
  #
  # 1. less `volumes`
  # 2. config put `configs`
  # 3. secrets put `secrets`
  # 4. use log driver journald
  #
  #
  # 1. `docker stack deploy` not support env
  #
  #
  # Don't edit this file
  #
  # $ cp docker-production.yml docker-production.khs1994.yml
  #
  # Then Edit `docker-production.*.yml`
  #

  mysql:
    << : *default-common
    build:
      context: ./dockerfile/mysql/
      dockerfile: Dockerfile
    #
    # image: username/lnmp-mysql:tag
    #
    # image: khs1994/lnmp-mysql:8.0.3
    #
    image: mysql:8.0.3
    environment:
      # MYSQL_ROOT_PASSWORD: mytest
      MYSQL_ROOT_PASSWORD_FILE: /etc/db_root_password
      MYSQL_DATABASE: test
    # ports:
    #   - "127.0.0.1:3306:3306"
    volumes:
      - ./backup/init.production:/docker-entrypoint-initdb.d:ro
      - ./backup/mysql:/backup:rw
      - mysql-data:/var/lib/mysql:rw
      # - ./config/mysql/conf.production.d:/etc/mysql/conf.d:ro
    command: ["mysqld","--character-set-server=utf8mb4"]
    logging: *default-logging
    deploy:
      << : *default-deploy
      placement:
        constraints: [node.role == manager]
      # resources:
      #   limits:
      #     cpus: '0.50'
      #     memory: 50M
      #   reservations:
      #     cpus: '0.25'
      #     memory: 20M
      labels:
        << : *default-labels
        com.khs1994.lnmp.mysql: "true"
    secrets:
      - source: db_root_password
        target: /etc/db_root_password
    configs:
      - source: mysql_conf_d_docker_cnf
        target: /etc/mysql/conf.d/docker.cnf
    labels:
      << : *default-labels
      com.khs1994.lnmp.mysql: "true"

  # mariadb:
  #   << : *default-common
  #   build:
  #     context: ./dockerfile/mariadb/
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-mariadb:tag
  #   #
  #   # image: khs1994/lnmp-mariadb:10.3.5
  #   #
  #   image: "mariadb:10.3.5"
  #   environment:
  #     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
  #     MYSQL_DATABASE: test
  #     # MYSQL_USER:
  #     # MYSQL_PASSWORD:
  #   # ports:
  #   #   - "127.0.0.1:3306:3306"
  #   volumes:
  #     # - ./config/mariadb/conf.d:/etc/mysql/conf.d:ro
  #     # https://github.com/docker-library/docs/tree/master/mariadb#initializing-a-fresh-instance
  #     - ./backup/init.production:/docker-entrypoint-initdb.d:ro
  #     - mariadb-data:/var/lib/mysql:rw
  #     - ./backup/mariadb:/backup:rw
  #   command:
  #     - mysqld
  #     - --character-set-server=utf8mb4
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #   logging: *default-logging
  #   secrets:
  #     - db_root_password
  #   configs:
  #     - source: mariadb_conf_d_docker_cnf
  #       target: /etc/mysql/conf.d/docker.cnf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.mariadb: "true"

  redis:
    << : *default-common
    build:
      context: ./dockerfile/redis/
      dockerfile: Dockerfile
    #
    # image: username/lnmp-redis:tag
    #
    # image: khs1994/lnmp-redis:4.0.8
    #
    image: redis:4.0.8-alpine
    # ports:
    #   - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data:rw
    command: [
      "redis-server",
      "/redis.conf",
      "--daemonize no",
      "--bind 0.0.0.0"
      ]
    logging: *default-logging
    deploy:
      << : *default-deploy
      # replicas: 2
      placement:
        constraints: [node.role == manager]
      labels:
        << : *default-labels
        com.khs1994.lnmp.redis: "true"
    configs:
      - source: redis_conf
        target: /redis.conf
    labels:
      << : *default-labels
      com.khs1994.lnmp.redis: "true"

  # memcached:
  #   << : *default-common
  #   build:
  #     context: ./dockerfile/memcached/
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-memcached:tag
  #   #
  #   # image: khs1994/lnmp-memcached:1.5.6
  #   #
  #   image: memcached:1.5.6-alpine
  #   # ports:
  #   #   - "127.0.0.1:11211:11211"
  #   volumes:
  #     - zoneinfo-data:/usr/share/zoneinfo:rw
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #   logging: *default-logging
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.memcached: "true"

  # rabbitmq:
  #   << : *default-common
  #   build:
  #     context: ./dockerfile/rabbitmq/
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-rabbitmq:tag
  #   #
  #   # image: khs1994/lnmp-rabbitmq:3.7.3
  #   #
  #   image: rabbitmq:3.7.3-management-alpine
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq:rw
  #     - zoneinfo-data:/usr/share/zoneinfo:rw
  #   # ports:
  #   #   - "127.0.0.1:15672:15672"
  #   #   - "127.0.0.1:5672:5672"
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #   logging: *default-logging
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.rabbitmq: "true"

  # postgresql:
  #   << : *default-common
  #   build:
  #     context: ./dockerfile/postgresql/
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-postgresql:tag
  #   #
  #   # image: khs1994/lnmp-postgresql:10.3
  #   #
  #   image: postgres:10.3-alpine
  #   environment:
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
  #     - POSTGRES_DB=test
  #   volumes:
  #     - zoneinfo-data:/usr/share/zoneinfo:rw
  #     - postgresql-data:/var/lib/postgresql/data:rw
  #   # ports:
  #   #   - "127.0.0.1:5432:5432"
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #   logging: *default-logging
  #   secrets:
  #     # default is mysql password
  #     - db_root_password
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.postgresql: "true"

  # mongodb:
  #   << : *default-common
  #   build:
  #     context: ./dockerfile/mongodb/
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-mongodb:tag
  #   #
  #   # image: khs1994/lnmp-mongodb:3.7.2
  #   #
  #   image: mongo:3.7.2
  #   volumes:
  #     # - ./config/mongodb/mongod.conf:/etc/mongod.conf:ro
  #     - mongodb-data:/data/db:rw
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #   logging: *default-logging
  #   # ports:
  #   #    - "127.0.0.1:27017:27017"
  #   command: ["mongod","--config","/etc/mongod.conf"]
  #   configs:
  #     - source: mongod_conf
  #       target: /etc/mongod.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.mongodb: "true"

  php7:
    << : *default-common
    build:
      # context: ./dockerfile/php/
      context: ./app/demo/
      dockerfile: Dockerfile
      # args:
      #   foo: bar
      # cache_from:
      #   - alpine:3.7
      # labels:
      #   - "com.khs1994.lnmp.php7=true"
    #
    # image: username/lnmp-php:tag
    #
    # image: khs1994/lnmp-php:7.2.3
    #
    image: khs1994/php-fpm:7.2.3-alpine3.7
    volumes:
      - ./app:/app:rw
      # - ./config/php/php-fpm.production.d/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro
      # - ./config/php/php.production.ini:/usr/local/etc/php/php.ini:ro
      - zoneinfo-data:/usr/share/zoneinfo:rw
    networks:
      - frontend
      - backend
    command: php-fpm -R -F
    environment:
      - APP_ENV=production
      - KHS1994_LNMP_DOCKER_VERSION=v18.05 x86_64 Docker Swarm
    dns:
      - 114.114.114.114
    depends_on:
      - mysql
      - redis
    logging: *default-logging
    deploy:
      << : *default-deploy
      # replicas: 2
      placement:
        constraints: [node.role == manager]
      labels:
        << : *default-labels
        com.khs1994.lnmp.php7: "true"
    configs:
      - source: php_ini
        target: /usr/local/etc/php/php.ini
      - source: php_fpm_conf_d_zz_docker_conf
        target: /usr/local/etc/php-fpm.d/zz-docker.conf
    secrets:
      - source: ssh_id_rsa
        target: /root/.ssh/id_rsa
        mode: 0600
      - source: ssh_config
        target: /root/.ssh/config
    labels:
      << : *default-labels
      com.khs1994.lnmp.php7: "true"

  nginx:
    << : *default-common
    build:
      # context: ./dockerfile/nginx/
      context: ./config/nginx
      dockerfile: Dockerfile
    #
    # image: username/lnmp-nginx:tag
    #
    # image: khs1994/lnmp-nginx:1.13.9
    #
    image: khs1994/nginx:1.13.9-tls1.3-stretch
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./app:/app:rw
      - ./config/nginx:/etc/nginx/conf.d:ro
    networks:
      - frontend
    depends_on:
      - php7
    logging: *default-logging
    deploy:
      << : *default-deploy
      # replicas: 2
      placement:
        constraints: [node.role == manager]
      labels:
        << : *default-labels
        com.khs1994.lnmp.nginx: "true"
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
        # uid: '103'
        # gid: '103'
        # mode: 0440
      #
      # one domain one conf file
      #
      # - source: nginx_khs1994_com_conf
      #   target: /etc/nginx/conf.d/khs1994.com.conf
      # - source: nginx_80_conf
      #   target: /etc/nginx/conf.d/80.conf
      # - source: nginx_301_conf
      #   target: /etc/nginx/conf.d/301.conf
      #
      #
      # Example Don't Edit
      #
      #
      # - source: nginx_domain_com_conf
      #   target: /etc/nginx/conf.d/domain.com.conf
    # secrets:
      #
      # - source: khs1994_com_ssl_crt
      #   target: /etc/nginx/conf.d/ssl/khs1994.com.crt
      # - source: khs1994_com_ssl_key
      #   target: /etc/nginx/conf.d/ssl/khs1994.com.key
      # - source: developer_khs1994_com_ssl_crt
      #   target: /etc/nginx/conf.d/ssl/developer.khs1994.com.crt
      # - source: developer_khs1994_com_ssl_key
      #   target: /etc/nginx/conf.d/ssl/developer.khs1994.com.key
      # - source: auth_htpasswd
      #   target: /etc/nginx/conf.d/auth/nginx.htpasswd
      #
      #
      # Example Don't Edit
      #
      #
      # - source: domain_com_ssl_crt
      #   target: /etc/nginx/conf.d/ssl/domain.com.crt
      # - source: domain_com_ssl_key
      #   target: /etc/nginx/conf.d/ssl/domain.com.key
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost"]
    #   interval: 1m30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    labels:
      << : *default-labels
      com.khs1994.lnmp.nginx: "true"

  # httpd:
  #   << : *default-common
  #   build:
  #     context: ./config/httpd
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-httpd:tag
  #   #
  #   # image: khs1994/lnmp-httpd:2.4.29
  #   #
  #   image: "httpd:2.4.29-alpine"
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   volumes:
  #     - ./app:/app:rw
  #     # - ./config/etc/httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf
  #     # - ./config/httpd:/usr/local/apache2/conf.d
  #     - zoneinfo-data:/usr/share/zoneinfo:rw
  #   working_dir: /app
  #   networks:
  #     - frontend
  #   depends_on:
  #     - php7
  #   logging: *default-logging
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #   configs:
  #     - source: httpd_conf
  #       target: /usr/local/apache2/conf/httpd.conf
  #     - source: vhost_khs1994_com_conf
  #       target: /usr/local/apache2/conf.d/vhost.khs1994.com.conf
  #     #
  #     #
  #     # Example Don't Edit
  #     #
  #     #
  #     # - source: vhost_domain_com_conf
  #     #   target: /usr/local/apache2/conf.d/vhost.domain.com.conf
  #   secrets:
  #     - source: khs1994_com_ssl_crt
  #       target: /usr/local/apache2/conf.d/ssl/khs1994.com.crt
  #     - source: khs1994_com_ssl_key
  #       target: /usr/local/apache2/conf.d/ssl/khs1994.com.key
  #     - source: developer_khs1994_com_ssl_crt
  #       target: /usr/local/apache2/conf.d/ssl/developer.khs1994.com.crt
  #     - source: developer_khs1994_com_ssl_key
  #       target: /usr/local/apache2/conf.d/ssl/developer.khs1994.com.key
  #     #
  #     #
  #     # Example Don’t Edit
  #     #
  #     #
  #     # - source: domain_com_ssl_crt
  #     #   target: /usr/local/apache2/conf.d/ssl/domain.com.crt
  #     # - source: domain_com_ssl_key
  #     #   target: /usr/local/apache2/conf.d/ssl/domain.com.key
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.httpd: "true"

  # registry:
  #   << : *default-common
  #   build:
  #     context: ./config/registry
  #     dockerfile: Dockerfile
  #   #
  #   # image: username/lnmp-registry:tag
  #   #
  #   # image: khs1994/lnmp-registry:latest
  #   #
  #   image: registry:latest
  #   networks:
  #     - frontend
  #     - backend
  #   # ports:
  #   #   - "127.0.0.1:5000:5000"
  #   volumes:
  #     # - ./config/registry:/etc/docker/registry
  #     - registry-data:/var/lib/registry
  #   deploy:
  #     << : *default-deploy
  #     placement:
  #       constraints: [node.role == manager]
  #     labels:
  #       << : *default-labels
  #       com.khs1994.lnmp.mysql: "true"
  #   logging: *default-logging
  #   configs:
  #     - source: registy_yml
  #       target: /etc/docker/registry/config.yml
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.httpd: "true"

networks:
  frontend:
    labels:
      << : *default-labels
      com.khs1994.lnmp.frontend: "true"
  backend:
    labels:
      << : *default-labels
      com.khs1994.lnmp.backend: "true"

volumes:
  mysql-data:
    labels:
      << : *default-labels
      com.khs1994.lnmp.mysql: "true"
  # mariadb-data:
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.mariadb: "true"
  redis-data:
    labels:
      << : *default-labels
      com.khs1994.lnmp.redis: "true"
  # rabbitmq-data:
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.rabbitmq: "true"
  # postgresql-data:
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.postgresql: "true"
  # mongodb-data:
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.mongodb: "true"
  zoneinfo-data:
    labels:
      << : *default-labels
      com.khs1994.lnmp.zoneinfo: "true"
  # registry-data:
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.registry: "true"

secrets:
  db_root_password:
    file: secrets/db_root_password.txt
    labels:
      << : *default-labels
      com.khs1994.lnmp.mysql: "true"
  # khs1994_com_ssl_key:
  #   file: ./config/nginx/ssl/khs1994.com.key
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  # khs1994_com_ssl_crt:
  #   file: ./config/nginx/ssl/khs1994.com.crt
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  # developer_khs1994_com_ssl_crt:
  #   file: ./config/nginx/ssl/developer.khs1994.com.crt
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  # developer_khs1994_com_ssl_key:
  #   file: ./config/nginx/ssl/developer.khs1994.com.key
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  # auth_htpasswd:
  #   file: ./config/nginx/auth/nginx.htpasswd
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  #
  #
  # Example Don't Edit
  #
  #
  # domain_com_ssl_key:
  #   file: ./config/nginx/ssl/domain.com.key
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  #
  # domain_com_ssl_crt:
  #   file: ./config/nginx/ssl/domain.com.crt
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  #
  #
  # SSH use in  CI/CD
  #
  #
  ssh_id_rsa:
    file: /root/.ssh/id_rsa
    labels:
      << : *default-labels
      com.khs1994.lnmp.ssh: "true"
  #
  # SSH config
  #
  ssh_config:
    file: ./secrets/ssh_config
    labels:
      << : *default-labels
      com.khs1994.lnmp.ssh: "true"

configs:
  mysql_conf_d_docker_cnf:
    file: ./config/mysql/conf.production.d/docker.cnf
    labels:
      << : *default-labels
      com.khs1994.lnmp.mysql: "true"
  # mariadb_conf_d_docker_cnf:
  #   file: ./config/mariadb/conf.production.d/docker.cnf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.mariadb: "true"
  nginx_conf:
    file: ./config/etc/nginx/nginx.production.conf
    labels:
      << : *default-labels
      com.khs1994.lnmp.nginx: "true"
  # nginx_80_conf:
  #   file: ./config/nginx/conf.d/80.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  # nginx_301_conf:
  #   file: ./config/nginx/conf.d/301.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  # nginx_khs1994_com_conf:
  #   file ./config/nginx/conf.d/khs1994.com.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  #
  #
  # NGINX Example Don't Edit
  #
  #
  # nginx_domain_com_conf:
  #   file ./config/nginx/conf.d/domain.com.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.nginx: "true"
  #
  # httpd_conf:
  #   file: ./config/etc/httpd/httpd.production.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.httpd: "true"
  #
  #
  #
  # vhost_khs1994_com_conf:
  #   file: ./config/httpd/khs1994.com.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.httpd: "true"
  #
  #
  # Apache Example Don't Edit
  #
  #
  # vhost_domain_com_conf:
  #   file: ./config/httpd/domain.com.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.httpd: "true"
  php_ini:
    file: ./config/php/php.production.ini
    labels:
      << : *default-labels
      com.khs1994.lnmp.php7: "true"
  php_fpm_conf_d_zz_docker_conf:
    file: ./config/php/php-fpm.production.d/zz-docker.conf
    labels:
      << : *default-labels
      com.khs1994.lnmp.php7: "true"
  redis_conf:
    file: ./config/redis/redis.production.conf
    labels:
      << : *default-labels
      com.khs1994.lnmp.redis: "true"
  # mongod_conf:
  #   file: ./config/mongodb/mongod.production.conf
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.mongodb: "true"
  # registy_yml:
  #   file: ./config/registry/config.production.yml
  #   labels:
  #     << : *default-labels
  #     com.khs1994.lnmp.registry: "true"
