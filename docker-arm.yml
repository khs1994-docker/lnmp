version: "3.6"

x-common:
  &default-common
  restart: always
  env_file:
    - ./cli/timezone.env
  networks:
    - backend
  # dns:
  #   - ${DNS:-114.114.114.114}

x-labels:
  &default-labels
  labels:
    - ${LNMP_DOMAIN:-com.khs1994.lnmp}=true

x-build:
  &default-build
  # Dockerfile: my.Dockerfile
  args:
    ALPINE_URL: mirrors.ustc.edu.cn # dl-cdn.alpinelinux.org

x-build-debian:
  &default-build-debian
  # Dockerfile: my.Dockerfile
  args:
    DEB_URL: mirrors.ustc.edu.cn # deb.debian.org
    DEB_SECURITY_URL: mirrors.ustc.edu.cn/debian-security/ # security.debian.org

services:
  #
  # ARM
  #
  # MySQL not in arm
  # mysql:
  #   << : *default-common
  #   << : *default-labels
  #   # build:
  #   #   << : *default-build-debian
  #   #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/mysql
  #   #   dockerfile: Dockerfile
  #   # image: lnmp-mysql:latest
  #   image: "${ARM_ARCH:-arm64v8}/mysql:${KHS1994_LNMP_MYSQL_VERSION:-8.0.3}"
  #   environment:
  #     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
  #     MYSQL_DATABASE: test
  #     # MYSQL_USER:
  #     # MYSQL_PASSWORD:
  #   ports:
  #     - "${MYSQL_PORT:-127.0.0.1:3306}:3306"
  #   volumes:
  #     - ./config/mysql/${LNMP_MYSQL_CONF:-docker.cnf}:/etc/mysql/conf.d/docker.cnf:ro
  #     - ./backup/init:/docker-entrypoint-initdb.d:ro
  #     - mysql-data:${LNMP_MYSQL_DATA:-/var/lib/mysql}
  #     - ./logs/mysql:/var/log/mysql
  #     - ./backup/mysql:/backup:rw

  redis:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build
    #   << : *default-build-debian
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/redis/
    #   dockerfile: Dockerfile
    # image: lnmp-redis:latest
    image: "${ARM_ARCH:-arm64v8}/redis:${KHS1994_LNMP_REDIS_VERSION:-4.0}${ARM_BASED_OS}"
    volumes:
      - ./config/redis/${REDIS_CONF:-redis.conf}:/redis.conf:ro
      - ./logs/redis:/var/log/redis
      - redis-data:/data
      - zoneinfo-data:/usr/share/zoneinfo
    ports:
      - "${REDIS_PORT:-127.0.0.1:6379}:6379"
    command: [
      "redis-server",
      "/redis.conf",
      "--daemonize no",
      "--logfile /var/log/redis/redis.log",
      "--bind 0.0.0.0"
      ]

  memcached:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build-debian
    #   << : *default-build
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/memcached/
    #   dockerfile: Dockerfile
    image: "${ARM_ARCH:-arm64v8}/memcached:${KHS1994_LNMP_MEMCACHED_VERSION:-1.5}${ARM_BASED_OS}"
    env_file:
      - ./cli/timezone.env
    volumes:
      - zoneinfo-data:/usr/share/zoneinfo
    ports:
       - "${MEMCACHED_PORT:-127.0.0.1:11211}:11211"

  rabbitmq:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build-debian
    #   << : *default-build
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/rabbitmq/
    #   dockerfile: Dockerfile
    image: "${ARM_ARCH:-arm64v8}/rabbitmq:${KHS1994_LNMP_RABBITMQ_VERSION:-3.7}-management${ARM_BASED_OS}"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - zoneinfo-data:/usr/share/zoneinfo
    env_file:
      - ./cli/timezone.env
    # ports:
    #   - "15672"
    #   - "5672"

  postgresql:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build-debian
    #   << : *default-build
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/postgresql/
    #   dockerfile: Dockerfile
    image: "${ARM_ARCH:-arm64v8}/postgres:${KHS1994_LNMP_POSTGRESQL_VERSION:-10}${ARM_BASED_OS}"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
      - POSTGRES_DB=test
    volumes:
      - postgresql-data:/var/lib/postgresql
      - zoneinfo-data:/usr/share/zoneinfo
    ports:
      - "${POSTGRESQL_PORT:-127.0.0.1:5432}:5432"
    secrets:
      # default is mysql password
      - db_root_password

  # mongodb:
  #   << : *default-common
  #   << : *default-labels
  #   # build:
  #   #   << : *default-build-debian
  #   #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/mongodb/
  #   #   dockerfile: Dockerfile
  #   # image: lnmp-mongodb:lastet
  #   image: ${ARM_ARCH:-arm64v8}/mongo:${KHS1994_LNMP_MONGODB_VERSION:-3.7}
  #   volumes:
  #     - ./config/mongodb/${MONGODB_CONF:-mongod.conf}:/etc/mongod.conf
  #     - mongodb-data:/data/db
  #     - ./logs/mongodb/mongo.log:/var/log/mongodb/mongo.log
  #   ports:
  #     - "${MONGODB_PORT:-127.0.0.1:27017}:27017"
  #   env_file:
  #     - ./cli/timezone.env
  #   command: ["mongod","--config","/etc/mongod.conf"]

  php7:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build-debian
    #   << : *default-build
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/php/
    #   dockerfile: Dockerfile
    # image:lnmp-php:lastet
    image: "khs1994/${ARM_ARCH:-arm64v8}-php-fpm:${KHS1994_LNMP_PHP_VERSION:-7.2.5}-${ARM_PHP_BASED_OS}"
    networks:
      - frontend
      - backend
    volumes:
      - ./app:${LNMP_PHP_PATH:-/app}:rw
      - ./config/php/${LNMP_PHP_INI:-php.development.ini}:/usr/local/etc/php/php.ini:ro
      - ./config/php/${LNMP_PHP_XDEBUG_INI:-docker-xdebug.ini}:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
      - ./config/php/${LNMP_PHP_ERROR_INI:-docker-error-log.ini}:/usr/local/etc/php/conf.d/error-log.ini:ro
      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker.conf}:/usr/local/etc/php-fpm.d/zz-docker.conf:ro
      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker-log.conf}:/usr/local/etc/php-fpm.d/zz-docker-log.conf:ro
      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker-slow-log.conf}:/usr/local/etc/php-fpm.d/zz-docker-slow-log.conf:ro
      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker-pm.conf}:/usr/local/etc/php-fpm.d/zz-docker-pm.conf:ro
      - ./logs/php-fpm:/var/log/php-fpm:rw
    environment:
      - KHS1994_LNMP_DOCKER_VERSION=${KHS1994_LNMP_DOCKER_VERSION:-v18.08} ${ARM_ARCH:-arm64v8} With Pull Docker Image
      - APP_ENV=development
    command: ["php-fpm","-R"]

  nginx:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build-debian
    #   << : *default-build
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/nginx/
    #   dockerfile: Dockerfile
    # image: lnmp-nginx:latest
    image: "${ARM_ARCH:-arm64v8}/nginx:${KHS1994_LNMP_NGINX_VERSION:-1.15}"
    networks:
      - frontend
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./app:${LNMP_PHP_PATH:-/app}:rw
      - ./config/${NGINX_CONF_D:-nginx}:/etc/nginx/conf.d:ro
      - ./config/etc/nginx/${NGINX_CONF:-nginx.conf}:/etc/nginx/nginx.conf:ro
      - ./config/etc/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php7

  httpd:
    << : *default-common
    << : *default-labels
    # build:
    #   << : *default-build-debian
    #   << : *default-build
    #   context: ./dockerfile/${ARM_ARCH:-arm64v8}/httpd
    #   dockerfile: Dockerfile
    # image: lnmp-httpd:latest
    image: "${ARM_ARCH:-arm64v8}/httpd:${KHS1994_LNMP_HTTPD_VERSION:-2.4}${ARM_BASED_OS}"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./app:${LNMP_PHP_PATH:-/app}:rw
      - ./config/etc/httpd/${HTTPD_CONF:-httpd.conf}:/usr/local/apache2/conf/httpd.conf
      - ./config/httpd/${HTTPD_CONF_D:-conf.d}:/usr/local/apache2/conf.d
      - ./logs/httpd:/usr/local/apache2/logs
      - zoneinfo-data:/usr/share/zoneinfo
    working_dir: /app
    networks:
      - frontend
    depends_on:
      - php7

networks:
  frontend:
    << : *default-labels
  backend:
    << : *default-labels

volumes:
  # mysql-data:
  #   << : *default-labels
  redis-data:
    << : *default-labels
  rabbitmq-data:
    << : *default-labels
  postgresql-data:
    << : *default-labels
  # mongodb-data:
  #   << : *default-labels
  zoneinfo-data:
    << : *default-labels

secrets:
  db_root_password:
    << : *default-labels
    file: secrets/db_root_password.txt
