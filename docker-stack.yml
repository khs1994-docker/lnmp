version: "3.4"
services:

  # 在集群执行
  # $ docker stack deploy -c docker-stack.yml lnmp
  # $ docker stack ps lnmp
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

  mysql:
    image: "mysql:5.7.20"
    env_file:
      - ./bin/timezone.env
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /etc/db_root_password
      MYSQL_DATABASE: test
    networks:
      - backend
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql:rw
      - ./logs/mysql:/var/log/mysql:rw
      - ./backup/mysql:/backup:rw
    command: ["mysqld","--character-set-server=utf8mb4"]
    deploy:
      placement:
        # 在管理节点运行
        constraints: [node.role == manager]
    secrets:
      - source: db_root_password
        target: /etc/db_root_password
    configs:
      - source: mysqld_cnf
        target: /etc/mysql/mysql.conf.d/mysqld.cnf
        # uid: '103'
        # gid: '103'
        # mode: 0440

  redis:
    image: "khs1994/redis:4.0.6-alpine"
    env_file: ./bin/timezone.env
    # ports:
    #   - "6379"
    networks:
      - backend
    command: ["redis-server","/redis.conf"]
    deploy:
      # 同时运行的容器数量
      replicas: 1

  php7:
    image: "khs1994/php-fpm:swarm-7.2.0-alpine3.7"
    # container_name: khs1994-docker-lnmp-php-fpm
    # volumes:
    #   - ./logs/php-fpm:/var/log/php-fpm:rw
    networks:
      - frontend
      - backend
    command: ["php-fpm","-R"]
    env_file: .env
    environment:
      - APP_ENV=production
      - KHS1994_LNMP_DOCKER_VERSION=${KHS1994_LNMP_DOCKER_VERSION} x86_64 Docker Swarm
    deploy:
      replicas: 2

  nginx:
    image: "khs1994/nginx:swarm-1.13.7-alpine"
    env_file: ./bin/timezone.env
    ports:
      - "443:443"
      - "80:80"
    # volumes:
    #   - ./logs/nginx:/var/log/nginx:rw
    networks:
      - frontend
    depends_on:
      - php7
    deploy:
      replicas: 2
    command: ["/wait-for-php.sh"]

networks:
  frontend:
  backend:

volumes:
  mysql-data:
  redis-data:
  # rabbitmq-data:
  # postgresql-data:
  # mongodb-data:

secrets:
  db_root_password:
    file: secrets/db_root_password.txt

configs:
  mysqld_cnf:
    file: ./config/mysql/mysql.conf.d/mysqld.cnf
