version: "3.5"
services:

  # MySQL 暂时没有 arm 镜像
  # mysql:
  #   restart: always
  #   image: "${ARM_ARCH}/mysql:${KHS1994_LNMP_MYSQL_VERSION}"
  #   environment:
  #     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
  #     MYSQL_DATABASE: test
  #     # MYSQL_USER:
  #     # MYSQL_PASSWORD:
  #   env_file: ./cli/timezone.env
  #   networks:
  #     - backend
  #   ports:
  #     - "${DEV_MYSQL_PORT}:3306"
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #     - ./logs/mysql:/var/log/mysql
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.mysql=true"

  redis:
    # build:
    #   context: ./dockerfile/${ARM_ARCH}/redis/
    #   dockerfile: Dockerfile
    # image: lnmp-redis:latest
    restart: always
    image: "${ARM_ARCH}/redis:${KHS1994_LNMP_REDIS_VERSION}${ARM_BASED_OS}"
    env_file:
      - ./cli/timezone.env
    networks:
      - backend
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-data:/data
      - ./logs/redis:/var/log/redis
    expose:
      - "6379"
    # ports:
    #   - "6379"
    command: ["redis-server","/usr/local/etc/redis/redis.conf"]
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.redis=true"

  memcached:
    # build:
    #   context: ./dockerfile/${ARM_ARCH}/memcached/
    #   dockerfile: Dockerfile
    restart: always
    image: "${ARM_ARCH}/memcached:${KHS1994_LNMP_MEMCACHED_VERSION}${ARM_BASED_OS}"
    networks:
      - backend
    env_file:
      - ./cli/timezone.env
    # ports:
    #   - "11211"
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.memcached=true"

  rabbitmq:
    # build:
    #   context: ./dockerfile/${ARM_ARCH}/rabbitmq/
    #   dockerfile: Dockerfile
    restart: always
    image: "${ARM_ARCH}/rabbitmq:${KHS1994_LNMP_RABBITMQ_VERSION}-management${ARM_BASED_OS}"
    networks:
      - backend
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    env_file:
      - ./cli/timezone.env
    # ports:
    #   - "15672"
    #   - "5672"
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.rabbitmq=true"


  postgresql:
    # build:
    #   context: ./dockerfile/${ARM_ARCH}/postgresql/
    #   dockerfile: Dockerfile
    restart: always
    image: "${ARM_ARCH}/postgres:${KHS1994_LNMP_POSTGRESQL_VERSION}${ARM_BASED_OS}"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
      - POSTGRES_DB=test
    env_file:
      - ./cli/timezone.env
    networks:
      - backend
    volumes:
      - postgresql-data:/var/lib/postgresql
    # ports:
    #   - "5432"
    secrets:
      # 默认与 mysql 密码一致。
      - db_root_password
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.postgresql=true"

  # mongodb:
  #   restart: always
  #   image: ${ARM_ARCH}/mongo:${KHS1994_LNMP_MONGODB_VERSION}
  #   networks:
  #     - backend
  #   volumes:
  #     - ./config/mongodb/mongod.conf:/etc/mongod.conf
  #     - mongodb-data:/data/db
  #     - ./logs/mongodb/mongo.log:/var/log/mongodb/mongo.log
  #   ports:
  #     - "27017"
  #   env_file:
  #     - ./cli/timezone.env
  #   command: ["mongod","--config","/etc/mongod.conf"]
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.mongodb=true"


  php7:
    # arm 平台暂时只支持 开发环境，由于树莓派性能问题，镜像由 macOS 构建，默认拉取镜像
    # build:
    #   context: ./dockerfile/${ARM_ARCH}/php-fpm/
    #   dockerfile: Dockerfile
    restart: always
    image: "khs1994/${ARM_ARCH}-php-fpm:${KHS1994_LNMP_PHP_VERSION}-${ARM_PHP_BASED_OS}"
    networks:
      - frontend
      - backend
    volumes:
      - ./app:${DEVELOPMENT_LNMP_PHP_PATH}:rw
      - ./config/php/php.development.ini:/usr/local/etc/php/php.ini:ro
      - ./config/php/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
      - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      - ./config/php/php-fpm.d/docker.conf:/usr/local/etc/php-fpm.d/docker.conf:ro
      - ./config/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./logs/php-fpm:/var/log/php-fpm:rw
    env_file: .env
    environment:
      - KHS1994_LNMP_DOCKER_VERSION=${KHS1994_LNMP_DOCKER_VERSION} ${ARM_ARCH} With Pull Docker Image
      - APP_ENV=development
    command: ["php-fpm","-R"]
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.php=true"

  nginx:
    # build:
    #   context: ./dockerfile/${ARM_ARCH}/nginx/
    #   dockerfile: Dockerfile
    # image: lnmp-nginx:latest
    restart: always
    image: "${ARM_ARCH}/nginx:${KHS1994_LNMP_NGINX_VERSION}"
    env_file:
      - ./cli/timezone.env
    networks:
      - frontend
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./app:${DEVELOPMENT_LNMP_PHP_PATH}:rw
      - ./config/nginx:/etc/nginx/conf.d:ro
      - ./config/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/etc/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php7
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.nginx=true"

  # apache:
  #   restart: always
  #   image: "${ARM_ARCH}/httpd:${KHS1994_LNMP_APACHE_VERSION}-alpine"
  #   env_file:
  #     - ./cli/timezone.env
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   volumes:
  #     - ./app:${DEVELOPMENT_LNMP_PHP_PATH}:rw
  #     - ./config/etc/apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
  #     - ./config/apache2/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
  #     - ./config/nginx/ssl-demo:/usr/local/apache2/conf/ssl
  #     - ./logs/apache2:/usr/local/apache2/logs
  #   working_dir: /app
  #   networks:
  #     - frontend
  #   depends_on:
  #     - php7
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.apache=true"

networks:
  frontend:
  backend:

volumes:
  # mysql-data:
  redis-data:
  rabbitmq-data:
  postgresql-data:
  # mongodb-data:

secrets:
  db_root_password:
    file: secrets/db_root_password.txt
