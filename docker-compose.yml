version: "3.4"
services:

  mysql:
    restart: always
    image: "mysql:${KHS1994_LNMP_MYSQL_VERSION}"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: test
      # MYSQL_USER:
      # MYSQL_PASSWORD:
    env_file: ./bin/timezone.env
    networks:
      - backend
    volumes:
      # - ./config/mysql/conf.d:/etc/mysql/conf.d:ro
      - mysql-data:/var/lib/mysql:rw
      - ./logs/mysql:/var/log/mysql:rw
      - ./backup/mysql:/backup:rw
    command:
      - mysqld
      - --character-set-server=utf8mb4
    secrets:
      - db_root_password

  # mariadb:
  #   restart: always
  #   image: "mariadb:${KHS1994_LNMP_MARIADB_VERSION}"
  #   environment:
  #     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
  #     MYSQL_DATABASE: test
  #     # MYSQL_USER:
  #     # MYSQL_PASSWORD:
  #   env_file: ./bin/timezone.env
  #   networks:
  #     - backend
  #   volumes:
  #     # - ./config/mariadb/conf.d:/etc/mysql/conf.d:ro
  #     - mariadb-data:/var/lib/mysql:rw
  #     - ./logs/mariadb:/var/log/mysql:rw
  #     - ./backup/mariadb:/backup:rw
  #   command:
  #     - mysqld
  #     - --character-set-server=utf8mb4
  #   secrets:
  #     - db_root_password

  redis:
    restart: always
    image: "${PRODUCTIOM_DOCKER_IMAGE_PREFIX}/redis:${KHS1994_LNMP_REDIS_VERSION}-alpine"
    env_file: ./bin/timezone.env
    # ports:
    #   - "6379"
    networks:
      - backend
    volumes:
      # - ./config/redis/redis.conf:/redis.conf:ro
      # - redis-data:/data:rw
      - type: volume
        source: redis-data
        target: /data
        volume:
          nocopy: true
      # - ./logs/redis:/var/log/redis:rw
      - type: bind
        source: ./logs/redis
        target: /var/log/redis
        read_only: false
    command: ["redis-server","/redis.conf"]

  # memcached:
  #   restart: always
  #   image: memcached:${KHS1994_LNMP_MEMCACHED_VERSION}-alpine
  #   networks:
  #     - backend
  #   env_file: ./bin/timezone.env
  #   # ports:
  #   #   - "11211"
  #
  # rabbitmq:
  #   restart: always
  #   image: ${PRODUCTIOM_DOCKER_IMAGE_PREFIX}/rabbitmq:${KHS1994_LNMP_RABBITMQ_VERSION}-management-alpine
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq:rw
  #   networks:
  #     - backend
  #   env_file: ./bin/timezone.env
  #   # ports:
  #   #   - "15672"
  #   #   - "5672"
  #
  # postgresql:
  #   restart: always
  #   image: ${PRODUCTIOM_DOCKER_IMAGE_PREFIX}/postgres:${KHS1994_LNMP_POSTGRESQL_VERSION}-alpine
  #   environment:
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
  #     - POSTGRES_DB=test
  #   volumes:
  #     - postgresql-data:/var/lib/postgresql/data:rw
  #   networks:
  #     - backend
  #   env_file: ./bin/timezone.env
  #   # ports:
  #   #   - "5432"
  #   secrets:
  #     # 默认与 mysql 密码一致。
  #     - db_root_password
  #
  # mongodb:
  #   restart: always
  #   image: mongo:${KHS1994_LNMP_MONGODB_VERSION}
  #   env_file: ./bin/timezone.env
  #   volumes:
  #     - ./config/mongodb/mongod.conf:/etc/mongod.conf:ro
  #     - mongodb-data:/data/db:rw
  #     - ./logs/mongodb/mongo.log:/var/log/mongodb/mongo.log:rw
  #   networks:
  #     - backend
  #   # ports:
  #   #   - "27017"
  #   command: ["mongod","--config","/etc/mongod.conf"]

  php7:
    restart: always
    image: "${PRODUCTIOM_DOCKER_IMAGE_PREFIX}/php:${KHS1994_LNMP_PHP_VERSION}-alpine3.7"
    # container_name: khs1994-docker-lnmp-php-fpm
    volumes:
      # - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      # - ./config/php/php-fpm.d/docker.conf:/usr/local/etc/php-fpm.d/docker.conf:ro
      # - ./config/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./logs/php-fpm:/var/log/php-fpm:rw
    networks:
      - frontend
      - backend
    expose:
      - "9000"
    dns:
      - ${DNS}
    command: php-fpm -R
    env_file:
      - ./bin/timezone.env
      - ./bin/.env

  nginx:
    restart: always
    image: "nginx:${KHS1994_LNMP_NGINX_VERSION}-alpine"
    env_file:
      - ./bin/timezone.env
    ports:
      - "443:443"
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      # - ./config/nginx:/etc/nginx/conf.d:ro
      - type: bind
        source: ./config/nginx
        target: /etc/nginx/conf.d
      - ./config/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx:rw
    working_dir: /app
    networks:
      - frontend
    depends_on:
      - php7

  # apache:
  #   restart: always
  #   image: "httpd:${KHS1994_LNMP_APACHE_VERSION}-alpine"
  #   env_file:
  #     - ./bin/timezone.env
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   volumes:
  #     - ./config/etc/apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
  #     - ./config/apache2/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
  #     - ./config/nginx/ssl-demo:/usr/local/apache2/conf/ssl
  #     - ./logs/apache2:/usr/local/apache2/logs
  #   working_dir: /app
  #   networks:
  #     - frontend
  #   depends_on:
  #     - php7

networks:
  frontend:
  backend:

volumes:
  mysql-data:
  # mariadb-data:
  redis-data:
  # rabbitmq-data:
  # postgresql-data:
  # mongodb-data:

secrets:
  db_root_password:
    file: secrets/db_root_password.txt
