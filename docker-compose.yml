version: "3.5"
services:

  mysql:
    # restart: always
    # 此处定义的是自行构建镜像的前缀
    image: "${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/mysql:${KHS1994_LNMP_MYSQL_VERSION}"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: test
      # MYSQL_USER:
      # MYSQL_PASSWORD:
    env_file: ./cli/timezone.env
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
    volumes:
      - ./config/mysql/conf.d:/etc/mysql/conf.d:ro
      # https://github.com/docker-library/docs/tree/master/mysql#initializing-a-fresh-instance
      - ./backup/init:/docker-entrypoint-initdb.d:ro
      - mysql-data:/var/lib/mysql:rw
      - ./logs/mysql:/var/log/mysql:rw
      - ./backup/mysql:/backup:rw
    command:
      - mysqld
      - --character-set-server=utf8mb4
    secrets:
      - db_root_password
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.mysql=true"
      - "com.khs1994.lnmp.app.env=development"

  # mariadb:
  #   # restart: always
  #   image: "${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/mariadb:${KHS1994_LNMP_MARIADB_VERSION}"
  #   environment:
  #     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
  #     MYSQL_DATABASE: test
  #     # MYSQL_USER:
  #     # MYSQL_PASSWORD:
  #   env_file: ./cli/timezone.env
  #   networks:
  #     - backend
  #   ports:
  #     - "${MYSQL_PORT}:3306"
  #   volumes:
  #     - ./config/mariadb/conf.d:/etc/mysql/conf.d:ro
  #     # https://github.com/docker-library/docs/tree/master/mariadb#initializing-a-fresh-instance
  #     - ./backup/init:/docker-entrypoint-initdb.d:ro
  #     - mariadb-data:/var/lib/mysql:rw
  #     - ./logs/mariadb:/var/log/mysql:rw
  #     - ./backup/mariadb:/backup:rw
  #   command:
  #     - mysqld
  #     - --character-set-server=utf8mb4
  #   secrets:
  #     - db_root_password
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.mariadb=true"
  #     - "com.khs1994.lnmp.app.env=development"

  redis:
    # restart: always
    image: "${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/redis:${KHS1994_LNMP_REDIS_VERSION}-alpine"
    env_file: ./cli/timezone.env
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
    volumes:
      - ./config/redis/redis.conf:/redis.conf:ro
      # - redis-data:/data:rw
      - type: volume
        source: redis-data
        target: /data
        volume:
          nocopy: true
      # - ./logs/redis:/var/log/redis:rw
      - type: bind
        source: ./logs/redis
        target: /var/log/redis
        read_only: false
      - zoneinfo-data:/usr/share/zoneinfo
    command: ["redis-server","/redis.conf"]
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.redis=true"
      - "com.khs1994.lnmp.app.env=development"

  # memcached:
  #   # restart: always
  #   image: ${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/memcached:${KHS1994_LNMP_MEMCACHED_VERSION}-alpine
  #   networks:
  #     - backend
  #   env_file: ./cli/timezone.env
  #   ports:
  #     - "${MEMCACHED_PORT}:11211"
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.memcached=true"
  #     - "com.khs1994.lnmp.app.env=development"
  #   volumes:
  #     - zoneinfo-data:/usr/share/zoneinfo
  #
  # rabbitmq:
  #   # restart: always
  #   image: ${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/rabbitmq:${KHS1994_LNMP_RABBITMQ_VERSION}-management-alpine
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq:rw
  #     - zoneinfo-data:/usr/share/zoneinfo
  #   networks:
  #     - backend
  #   env_file: ./cli/timezone.env
  #   # ports:
  #   #   - "15672:15672"
  #   #   - "5672:5672"
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.rabbitmq=true"
  #     - "com.khs1994.lnmp.app.env=development"
  #
  # postgresql:
  #   # restart: always
  #   image: ${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/postgres:${KHS1994_LNMP_POSTGRESQL_VERSION}-alpine
  #   environment:
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
  #     - POSTGRES_DB=test
  #   volumes:
  #     - zoneinfo-data:/usr/share/zoneinfo
  #     - postgresql-data:/var/lib/postgresql/data:rw
  #   networks:
  #     - backend
  #   env_file: ./cli/timezone.env
  #   ports:
  #     - "${POSTGRESQL_PORT}:5432"
  #   secrets:
  #     # 默认与 mysql 密码一致。
  #     - db_root_password
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.postgresql=true"
  #     - "com.khs1994.lnmp.app.env=development"
  #
  # mongodb:
  #   # restart: always
  #   image: ${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/mongo:${KHS1994_LNMP_MONGODB_VERSION}
  #   env_file: ./cli/timezone.env
  #   volumes:
  #     - ./config/mongodb/mongod.conf:/etc/mongod.conf:ro
  #     - mongodb-data:/data/db:rw
  #     - ./logs/mongodb/mongo.log:/var/log/mongodb/mongo.log:rw
  #   networks:
  #     - backend
  #   ports:
  #     - "${MONGODB_PORT}27017"
  #   command: ["mongod","--config","/etc/mongod.conf"]
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.mongodb=true"
  #     - "com.khs1994.lnmp.app.env=development"

  php7:
    # restart: always
    image: "${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/php:${KHS1994_LNMP_PHP_VERSION}-alpine3.7"
    # container_name: khs1994-docker-lnmp-php-fpm
    volumes:
      - ./app:${LNMP_PHP_PATH}
      - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      - ./config/php/php-fpm.d/docker.conf:/usr/local/etc/php-fpm.d/docker.conf:ro
      - ./config/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./config/php/php.development.ini:/usr/local/etc/php/php.ini:ro
      - ./config/php/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
      - ./logs/php-fpm:/var/log/php-fpm:rw
      - zoneinfo-data:/usr/share/zoneinfo
    networks:
      - frontend
      - backend
      #
      # Redis MySQL Memcached 集群相关网络
      #
      - cluster_mysql
      - cluster_redis
    expose:
      - "9000"
    dns:
      - ${DNS}
    command: php-fpm -R
    env_file:
      - ./cli/timezone.env
      - ./cli/.env
    environment:
      - APP_ENV=development
      - KHS1994_LNMP_DOCKER_VERSION=${KHS1994_LNMP_DOCKER_VERSION} x86_64 With Pull Docker Image
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.php=true"
      - "com.khs1994.lnmp.app.env=development"

  phpmyadmin:
    image: ${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/phpmyadmin:{KHS1994_LNMP_PHPMYADMIN_VERSION}
    # restart: always
    networks:
      - backend
    environment:
      - PMA_HOST=mysql
    ports:
      - ${PHPMYADMIN_PORT}:80
    volumes:
      - phpmyadmin-data:/sessions
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.phpmyadmin=true"
      - "com.khs1994.lnmp.app.env=development"

  nginx:
    # restart: always
    image: "${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/khs1994/nginx:${KHS1994_LNMP_NGINX_VERSION}-alpine"
    env_file:
      - ./cli/timezone.env
    ports:
      - "443:443"
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      # - ./config/nginx:/etc/nginx/conf.d:ro
      - type: bind
        source: ./config/nginx
        target: /etc/nginx/conf.d
      - ./app:${LNMP_PHP_PATH}
      - ./config/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx:rw
    working_dir: /app
    networks:
      - frontend
    depends_on:
      - php7
    labels:
      - "com.khs1994.lnmp=true"
      - "com.khs1994.lnmp.nginx=true"
      - "com.khs1994.lnmp.app.env=development"

  # apache:
  #   # restart: always
  #   image: "${LNMP_SELF_BUILD_DOCKER_IMAGE_PREFIX}/httpd:${KHS1994_LNMP_APACHE_VERSION}-alpine"
  #   env_file:
  #     - ./cli/timezone.env
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   volumes:
  #     - ./app:${LNMP_PHP_PATH}
  #     - ./config/etc/apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
  #     - ./config/apache2:/usr/local/apache2/conf.d
  #     - ./logs/apache2:/usr/local/apache2/logs
  #     - zoneinfo-data:/usr/share/zoneinfo
  #   working_dir: /app
  #   networks:
  #     - frontend
  #   depends_on:
  #     - php7
  #   labels:
  #     - "com.khs1994.lnmp=true"
  #     - "com.khs1994.lnmp.apache=true"
  #     - "com.khs1994.lnmp.app.env=development"

networks:
  frontend:
  backend:
  cluster_mysql:
  cluster_redis:

volumes:
  mysql-data:
  # mariadb-data:
  redis-data:
  # rabbitmq-data:
  # postgresql-data:
  # mongodb-data:
  phpmyadmin-data:
  zoneinfo-data:

secrets:
  db_root_password:
    file: secrets/db_root_password.txt
